{"ast":null,"code":"var _jsxFileName = \"/Users/ionutdamian/Desktop/GoIT/goit-react-hw-02-phonebook/src/components/ContactForm/ContactForm.jsx\";\nimport { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport PropTypes from 'prop-types';\nimport s from '../ContactForm/ContactForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ContactForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      const name = event.target.name.value;\n      const number = event.target.number.value;\n      const {\n        addContact\n      } = this.props;\n      addContact({\n        id: nanoid(),\n        name,\n        number\n      });\n      event.target.reset();\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: s.form,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: s.form__title,\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: s.form__container,\n        onSubmit: this.handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: s.form__label,\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          className: s.form__input,\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n          placeholder: \"Enter name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: s.form__label,\n          children: \"Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          name: \"number\",\n          className: s.form__input,\n          pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n          title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n          placeholder: \"Enter phone number\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: s.form__btn,\n          type: \"submit\",\n          children: \"Add contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n}\nContactForm.propTypes = {\n  number: PropTypes.string,\n  name: PropTypes.string,\n  addContact: PropTypes.func.isRequired\n};","map":{"version":3,"names":["Component","nanoid","PropTypes","s","jsxDEV","_jsxDEV","ContactForm","constructor","arguments","handleFormSubmit","event","preventDefault","name","target","value","number","addContact","props","id","reset","render","className","form","children","form__title","fileName","_jsxFileName","lineNumber","columnNumber","form__container","onSubmit","form__label","type","form__input","pattern","title","placeholder","required","form__btn","propTypes","string","func","isRequired"],"sources":["/Users/ionutdamian/Desktop/GoIT/goit-react-hw-02-phonebook/src/components/ContactForm/ContactForm.jsx"],"sourcesContent":["import { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport PropTypes from 'prop-types';\n\nimport s from '../ContactForm/ContactForm.module.css';\n\nexport class ContactForm extends Component {\n  handleFormSubmit = event => {\n    event.preventDefault();\n\n    const name = event.target.name.value;\n    const number = event.target.number.value;\n    const { addContact } = this.props;\n\n    addContact({ id: nanoid(), name, number });\n    event.target.reset();\n  };\n\n  render() {\n    return (\n      <section className={s.form}>\n        <h1 className={s.form__title}>Phonebook</h1>\n        <form className={s.form__container} onSubmit={this.handleFormSubmit}>\n          <label className={s.form__label}>Name</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            className={s.form__input}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            placeholder=\"Enter name\"\n            required\n          />\n          <label className={s.form__label}>Number</label>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            className={s.form__input}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            placeholder=\"Enter phone number\"\n            required\n          />\n          <button className={s.form__btn} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </section>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  number: PropTypes.string,\n  name: PropTypes.string,\n  addContact: PropTypes.func.isRequired,\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}